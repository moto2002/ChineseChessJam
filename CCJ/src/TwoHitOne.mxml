<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   width="450"
			   height="400"
			   xmlns:parsley="http://www.spicefactory.org/parsley"
			   preinitialize="application1_preinitializeHandler(event)"
			   initialize="application1_initializeHandler(event)"
			   creationComplete="application1_creationCompleteHandler(event)"
			   xmlns:impl="com.godpaper.impl.*"
			   xmlns:popup="com.adobe.cairngorm.popup.*"
			   xmlns:popups="com.godpaper.views.popups.*"
			   >
	<fx:Script>
		<![CDATA[
			import com.godpaper.configs.BoardConfig;
			import com.godpaper.configs.CCJContextConfig;
			import com.godpaper.configs.IndicatorConfig;

			import mx.events.FlexEvent;
			import mx.logging.LogEventLevel;

			protected function application1_preinitializeHandler(event:FlexEvent):void
			{
				BoardConfig.xLines = 4;
				BoardConfig.yLines = 4;
				BoardConfig.xOffset = 100;
				BoardConfig.yOffset = 100;
				BoardConfig.width = 300;
				BoardConfig.height = 300;
				BoardConfig.xScale = 1;
				BoardConfig.yScale = 1;
			}

			protected function application1_initializeHandler(event:FlexEvent):void
			{
			}

			protected function application1_creationCompleteHandler(event:FlexEvent):void
			{
				// TODO Auto-generated method stub
			}

		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
		<!---
			The context for bootstrapping the whole Parsley framework.
		-->
		<parsley:ContextBuilder config="{CCJContextConfig}"/>

		<!---
			The system unique logging component provider LOG.debug/info/warn/error/fatal avenues.
		-->
		<s:TraceTarget id="traceTarget"
					   fieldSeparator="->"
					   includeCategory="true"
					   includeDate="false"
					   includeLevel="true"
					   includeTime="true"
					   level="{LogEventLevel.INFO}"
					   >
			<s:filters>
				[
				com.lookbackon.AI.searching.*,
				*
				]
			</s:filters>
		</s:TraceTarget>
		<!-- Popups here -->
		<popup:PopUpWrapper open="{IndicatorConfig.readOut}"
							center="true"
							modal="true">
			<popups:ThinkIndicatory/>
		</popup:PopUpWrapper>
	</fx:Declarations>

	<!---
		Vistual elements at stage here.
	-->
	<s:VGroup top="50" right="100" left="50" bottom="50">
		<impl:ChessBoardDefault id="defaultChessBoard" />
	</s:VGroup>
</s:Application>
